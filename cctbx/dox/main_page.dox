/*! \mainpage Computational Crystallography Toolbox

<hr>

\section intro Introduction

\par
The Computational Crystallography Toolbox (%cctbx) is a reusable
scientific software library for

<ul>
<li>the development of crystallographic structure determination
    programs.

<li>the integration of existing crystallographic programs through
    helper scripts.

<li>hands-on teaching crystallographic concepts.

</ul>

\par
The %cctbx is designed with an open and flexible architecture to
promote extendability and easy incorporation into other software
environments.  The package is organized as a set of ISO C++ classes
with Python (http://www.python.org/) bindings. This organization
combines the computational efficiency of a strongly typed compiled
language with the convenience and flexibility of a dynamically typed
scripting language in a strikingly uniform and very maintainable way.

\par
Use of the Python bindings is highly recommended, but optional. The
%cctbx can also be used purely as a C++ class library.

\par
All the components of the %cctbx including the packages it depends on
(Python and the Boost library) are available as Open Source. All of
these packages are covered by licenses that permit installation, use,
modification, preparation of derivative works, incorporation into other
computer software, and distribution of the original software or any
derivative work in binary and source code format.

\par
The bulk of the documentation is directly embedded in the C++ source
code and automatically processed into a web-based format for ease
of navigation. Syntactic differences put aside, Python and C++
objects and functions are quite similar. Therefore the web-based
documentation can be used for both the compiled and the scripted
layer of the %cctbx.

<hr>

\section examples Examples

The %cctbx distribution includes an
<a href="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/cctbx/cctbx/examples/"
><tt>%cctbx/examples</tt></a>
directory. Most examples are accessed through a web interface.
For convenience, these interfaces are provided at
http://cci.lbl.gov/servers/ .
The examples may also be installed and extended locally.

<hr>

\section first_glimpse A first glimpse

The fastest way of getting started with the %cctbx Python interface
is to use the pre-compiled Python modules for Windows. See the
\ref page_installation section for more details.

\par
Two classes of the %cctbx are <tt>cctbx::uctbx::UnitCell</tt> and
<tt>cctbx::sgtbx::SpaceGroup</tt>. The following Python script shows
how to define a unit cell, process a space group symbol to obtain
symmetry matrices, verify that the unit cell is compatible with the
symmetry, and print a list of the symmetry operations:

<hr>

\include python/getting_started.py

<hr>

Apart from syntactical differences, the corresponding C++
implementation is very similar:

<hr>

\include cpp/getting_started.cpp

<hr>

In both cases the output is as follows:

\verbatim
11 12 13 90 100 90
x,y,z
-x,y,-z
x+1/2,y+1/2,z
-x+1/2,y+1/2,-z
\endverbatim

<hr>

\section browsing Browsing the cctbx

The examples in the
<a href="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/cctbx/cctbx/examples/"
><tt>%cctbx/examples</tt></a>
directory highlight the major features of the %cctbx and can
be used to provide starting points for browsing the documentation.

Easy access to the documentation tree is provided by the links at
the top of this page. To browse the %cctbx documentation top-down,
use the <a href="namespaces.html">Namespace List</a>.

<hr>

\section links Links

<ul>
<li><a href="http://sourceforge.net/projects/cctbx/"
    >%cctbx - Project page at SourceForge</a>
<li><a href="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/cctbx/cctbx/"
    >%cctbx - Public CVS repository</a>
    (see also: \ref working_with_cvs)
<li><a href="http://sourceforge.net/project/showfiles.php?group_id=24107"
    >%cctbx - Download page</a>
<ul>
\par
</ul>
<li>\ref page_installation
<li>\ref page_installation_adv
<li>\ref page_installation_compilers
<li>\ref page_installation_python
<li>\ref page_about_documentation
<li>\ref page_history
</ul>

<hr>

\section acknowledgments Acknowledgments

This version of the %cctbx was written by members of the Computational
Crystallography Initiative (CCI, http://cci.lbl.gov/) at the Lawrence
Berkeley National Laboratory (http://www.lbl.gov/). The CCI is headed
by Paul Adams and has been supported by the U.S. Department of Energy
and NIH/NIGMS.

We are indebted to
<a href="http://www.boost.org/people/dave_abrahams.htm">David Abrahams</a>,
main author of the Boost.Python library, for his generous help.

<hr>

\section references References

<dl>

<dt>The Computational Crystallography Toolbox: crystallographic algorithms
    in a reusable software framework.
<dd>Grosse-Kunstleve RW, Sauter NK, Moriarty NW, Adams PD<br>
    Journal of Applied Crystallography, in the press.

<dt>Algorithms for Deriving Crystallographic Space-Group Information.
<dd>Grosse-Kunstleve RW<br>
    Acta Cryst. 1999, A55:383-395.

<dt>Algorithms for Deriving Crystallographic Space-Group Information II:
    Treatment of special positions.
<dd>Grosse-Kunstleve RW, Adams, PD<br>
    Acta Cryst. 2002, in the press.

<dt>On the handling of atomic anisotropic displacement parameters.
<dd>Grosse-Kunstleve RW, Adams, PD<br>
    Submitted to Journal of Applied Crystallography.

<dt>Space-Group Symbols for numeric and symbolic computations.
<dd>Shmueli U, Hall SR, Grosse-Kunstleve RW<br>
    In <I>International Tables for Crystallography, Volume B: Reciprocal
    space</I>, U. Shmueli, Ed., Kluwer
    Academic Publishers (Dordrecht), 2001, 107-119.

</dl>

<hr>

\section contact Contact
cctbx@cci.lbl.gov

<hr>

\par
Updated November 2001

<hr>
The %cctbx CVS development tree is hosted by
<A href="http://sourceforge.net">
<IMG src="http://sourceforge.net/sflogo.php?group_id=24107" width="88" height="31" border="0" alt="SourceForge Logo"></A>

*/
